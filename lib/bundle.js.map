{"version":3,"sources":["webpack:///webpack/bootstrap 31d694408a3aa2f807b1","webpack:///./lib/rogueCanvas.js","webpack:///./lib/game.js","webpack:///./lib/map.js","webpack:///./lib/creature.js","webpack:///./lib/character_model.js","webpack:///./lib/weapon.js","webpack:///./lib/random_item.js","webpack:///./lib/player.js","webpack:///./lib/game_view.js","webpack:///./lib/ui.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAC;;;;;;;ACzBD;AACA;AACA;;AAEA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA,qBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA,QAAO;AACP,sBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA,kBAAiB,iBAAiB;AAClC;AACA,oBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,QAAQ;AACzB,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB,OAAO;AACzB,qBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,8DAA6D,kBAAkB,2BAA2B,kBAAkB,qDAAqD,kBAAkB,cAAc,SAAS;AAC1N;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH,iCAAgC,iBAAiB;AACjD;AACA;AACA;AACA;AACA,IAAG;AACH,iCAAgC,iBAAiB;AACjD;AACA;AACA,IAAG;AACH,iCAAgC,iBAAiB;AACjD;AACA;AACA,IAAG;AACH,iCAAgC,iBAAiB;AACjD;AACA;AACA,IAAG;AACH,iCAAgC,iBAAiB;AACjD;AACA;AACA;AACA;AACA,IAAG;AACH,iCAAgC,iBAAiB;AACjD;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA2B,kBAAkB;;AAE7C;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAoB,yBAAyB,KAAK,wBAAwB;AAC1E;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,eAAe,KAAK,MAAM;AAC9C;;AAEA;AACA;AACA;;AAEA;AACA;AACA,qBAAoB,iCAAiC;;AAErD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;AAEA;;;;;;;ACvaA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA,oBAAmB,OAAO;AAC1B;AACA,mBAAkB,sCAAsC;AACxD,QAAO;AACP,mBAAkB,sCAAsC;AACxD;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA,mBAAkB,OAAO;AACzB,qBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,oBAAoB;AACvC,sBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA,UAAS;AACT;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAAyB;AACzB;AACA;AACA,MAAK;AACL,0BAAyB;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA,kBAAiB;AACjB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;AACL,qBAAoB;AACpB;AACA,MAAK;AACL,qBAAoB;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB;AACpB;AACA,MAAK;AACL,qBAAoB;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,sBAAsB;AACvC,oBAAmB,sBAAsB;AACzC;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,kBAAiB,mBAAmB;AACpC;AACA,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,gBAAgB;AACjC;AACA,oBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;;;;AAIA;;;;;;;AClUA;AACA;;AAEA;AACA,gCAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAkB,OAAO;AACzB;AACA;AACA,qBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA,SAAQ;AACR;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AChGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACvGA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;;;;;;ACrCA;;AAEA;AACA,WAAU;AACV;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;;;;;;AChBA;;AAEA;AACA,gCAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,IAAI;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACxDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;AClGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 31d694408a3aa2f807b1\n **/","const Game = require(\"./game\");\nconst GameView = require(\"./game_view\");\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n  const canvasEl = document.getElementById(\"canvas1\");\n  canvasEl.width = 750;\n  canvasEl.height = 700;\n\n  const canvasElDmg = document.getElementById(\"canvasDmg\");\n  canvasElDmg.width = 750;\n  canvasElDmg.height = 700;\n\n  const canvasElUI = document.getElementById(\"canvasUI\");\n  canvasElUI.width = 450;\n  canvasElUI.height = 600;\n\n  const ctx = canvasEl.getContext(\"2d\");\n  const ctxDmg = canvasElDmg.getContext(\"2d\");\n  const ctxUI = canvasElUI.getContext(\"2d\");\n  let game = new Game(ctxDmg);\n  while (game.map.steps < 800) {\n    game = new Game(ctxDmg);\n  }\n\n  new GameView(game, ctx, ctxUI, ctxDmg).intro();\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/rogueCanvas.js\n ** module id = 0\n ** module chunks = 0\n **/","const Map = require('./map');\nconst Player = require('./player');\nconst Item = require('./random_item')\n\nconst Game = function (ctx){\n  this.map = new Map(50, 50, 1);\n  this.world = {1: this.map}\n  this.currentLevel = 1\n  this.generateView();\n  this.player = new Player(this);\n  this.ctx = ctx;\n  this.dmgDisplay = {};\n  this.notification = {};\n  this.alive = true\n}\n\nGame.prototype.player = function () {\n  return this.player\n};\n\nGame.prototype.draw = function(ctx){\n  let grid = this.map.grid;\n  let posX = 0;\n  for (let i = -5; i < 6; i++) {\n    let x = this.map.playerLocation[0]\n    posX += 50\n    let posY = 0;\n    x += i;\n    for (let j = -5; j < 6; j++) {\n      let y = this.map.playerLocation[1]\n      y += j;\n      if (x >= 0 && x <= 49 && y >= 0 && y <= 49) {\n        this.render(grid[x][y], ctx, posX, posY)\n      } else {\n        this.render({type: '#'}, ctx, posX, posY)\n      }\n      posY += 50;\n    }\n  }\n  for (let i = 0; i < grid.length; i++) {\n    let x = i * 3;\n    for (let j = 0; j < grid.length; j++) {\n      let y = j * 3;\n      this.renderMiniMap(grid[i][j], ctx, x, y)\n    }\n  }\n  this.renderDmg(this.ctx);\n}\n\nGame.prototype.move = function (direction) {\n  let x = this.map.playerLocation[0]\n  let y = this.map.playerLocation[1]\n  let x1 = x + direction[0];\n  let y1 = y + direction[1];\n  if (this.alive === true) {\n    if (x1 >= 0 && x1 <= 49 && y1 >= 0 && y1 <= 49) {\n      if (this.map.grid[x1][y1].type === '0') {\n        this.updatePos(x, y, x1, y1);\n        this.generateView();\n      } else if (this.map.grid[x1][y1].type === 'M') {\n        this.action('ATTACK', x, y, x1, y1);\n      } else if (this.map.grid[x1][y1].type === 'X') {\n        this.action('go down', x, y, x1, y1);\n      } else if (this.map.grid[x1][y1].type === 'E' && this.currentLevel !== 1) {\n        this.action('go up');\n      } else if (this.map.grid[x1][y1].type === 'I') {\n        this.action('pick up', x, y, x1, y1);\n      }\n    }\n  }\n   Object.keys(this.map.monsterLocations).forEach(key =>{\n     if (this.map.monsterLocations[key]){\n        this.map.monsterLocations[key].creature.takeTurn(this.map.grid);\n       }\n   })\n};\n\nGame.prototype.action = function (action, x, y, x1, y1) {\n  switch (action) {\n    case 'ATTACK':\n      let creature = this.map.grid[x1][y1].creature\n      let yourAttack = Math.ceil(Math.random()*20)\n      let theirAttack = Math.ceil(Math.random()*20)\n      if ((yourAttack + this.player.strBonus) > creature.ac){\n        let dmg = this.player.rollDmg();\n        let num = Math.random();\n        if (yourAttack === 20) {\n          dmg *= 2;\n          this.dmgDisplay[num] = [dmg, 1, 250, 300, true, true];\n        } else {\n          this.dmgDisplay[num] = [dmg, 1, 250, 300, true, false];\n        }\n        creature.stats.health -= dmg;\n        if (creature.stats.health <= 0) {\n          this.player.kills += 1;\n          let leveled = this.player.gainXp(Math.floor(creature.stats.xp * (this.currentLevel/this.player.level)));\n          this.map.monsters -= 1\n          if (this.map.monsters === 0) {\n            let num = Math.random()\n            this.notification[num] = ['LEVEL CLEARED', 1, 110, 300, false]\n          }\n          if (leveled) {\n            let num = Math.random()\n            this.notification[num] = ['LEVEL UP', 1, 175, 300, false]\n          }\n          let item = Item.randomDrop();\n          if (item) {\n            this.map.grid[x1][y1].type = 'I';\n            this.map.grid[x1][y1].item = item;\n            this.map.grid[x1][y1].img = item.img;\n          } else {\n            this.map.grid[x1][y1].type = \"0\";\n          }\n          break;\n        }\n      } else {\n        let num = Math.random();\n        this.dmgDisplay[num] = ['miss', 1, 250, 300, true, false];\n      }\n      if (theirAttack > this.player.ac) {\n        let dmg = creature.rollDmg();\n        let num = Math.random();\n        if (theirAttack === 20) {\n          dmg *= 2;\n          this.dmgDisplay[num] = [dmg, 1, 300, 300, false, true];\n        } else {\n          this.dmgDisplay[num] = [dmg, 1, 300, 300, false, false];\n        }\n        this.player.stats.health -= dmg;\n        if (this.player.stats.health <= 0) {\n          this.alive = false;\n          let introOutro = document.getElementById('intro-outro')\n          introOutro.style.visibility = 'visible';\n\n          this.introOutro('death', creature.stats.type)\n        }\n      }\n      break;\n    case 'go down':\n      if (this.world[this.currentLevel + 1]) {\n        this.currentLevel += 1;\n        this.map = this.world[this.currentLevel]\n        this.map.newMonsters();\n      } else {\n        this.creatNewLevel();\n      }\n      break;\n    case 'go up':\n      this.currentLevel -= 1;\n      this.map = this.world[this.currentLevel]\n      this.map.newMonsters();\n      break;\n    case 'pick up':\n      let item = this.map.grid[x1][y1].item.kind\n      if (item === 'potion') {\n\n        this.player.inventory[0].potions += 1;\n      }\n      this.map.grid[x1][y1].type = '0';\n      break;\n  }\n};\n\nGame.prototype.end = function () {\n\n};\n\nGame.prototype.creatNewLevel = function () {\n  this.currentLevel += 1;\n  let map = new Map(50, 50, this.currentLevel);\n  while (map.steps < 800) {\n    map = new Map(50, 50, this.currentLevel);\n  }\n  this.map = map;\n  this.world[this.currentLevel] = this.map\n  this.generateView();\n};\n\nGame.prototype.updatePos = function(x, y, x1, y1){\n  this.map.grid[x][y].type = '0';\n  this.map.grid[x][y].seen = true;\n  this.map.grid[x1][y1].type = '@';\n  this.map.grid[x1][y1].seen = true;\n  this.map.playerLocation = [x1, y1];\n};\n\nGame.prototype.generateView = function(){\n  for (let i = 0; i < 50; i++) {\n    for (var j = 0; j < 50; j++) {\n      if (i >= 0 && j >= 0 && i <= 49 && j <= 49) {\n        this.map.grid[i][j].seeing = false\n      }\n    }\n  }\n  let x = this.map.playerLocation[0];\n  let y = this.map.playerLocation[1];\n  for (let i = -3; i < 4; i++) {\n    for (var j = -3; j < 4; j++) {\n      if (x + i >= 0 && y + j >= 0 && x + i <= 49 && y + j <= 49) {\n        this.map.grid[x + i][y + j].seen = true\n        this.map.grid[x + i][y + j].seeing = true\n      }\n    }\n  }\n}\n\nGame.prototype.introOutro = function (scenario, creature) {\n  let el = document.getElementById('txt');\n  el.textContent = ''\n  let text;\n  if (scenario === 'intro') {\n    text = \"It all started with a harmless adventure into the cave, but soon misfortune struck. The earth started to shake and the exit out was buried in rubble. Now the only thing left to do is to try to find another way out...                        or die.                   Use the arrow keys to move around.\"\n  } else {\n    text = `You have died. You managed to make it to level ${this.player.level}. On your way you killed ${this.player.kills} creatures but overall met your fate on cave floor ${this.currentLevel} fighting a ${creature}. Did you want to play again?`\n  }\n  let x = 0\n  let interval = setInterval(() => {\n    el.textContent += text[x]\n    x += 1\n    if (x >= text.length) {\n      clearInterval(interval);\n    }\n  }, 80);\n};\n\nGame.prototype.render = function(square, ctx, x, y){\n  let img = document.createElement(\"IMG\");\n  if (square.type === '#' && square.direction === 's') {\n    img.src = './graphics/brick_dark3.png';\n  } else if (square.type === '#') {\n    img.src = './graphics/cave.jpg';\n  } else if (square.type === '@') {\n    img.src = `./graphics/pave${square.variation}.jpg`;\n    ctx.drawImage(img, y,x,50,50);\n    img.src = `./graphics/aragorn.png`;\n    ctx.drawImage(img, y,x,50,50);\n    img.src = './graphics/human_m.png';\n  } else if (square.type === 'E') {\n    img.src = `./graphics/pave${square.variation}.jpg`;\n    ctx.drawImage(img, y,x,50,50);\n    img.src = this.currentLevel === 1 ? './graphics/lair3.png' : './graphics/stone_stairs_up.png';\n  } else if (square.type === 'X') {\n    img.src = `./graphics/pave${square.variation}.jpg`;\n    ctx.drawImage(img, y,x,50,50);\n    img.src = './graphics/stone_stairs_down.png';\n  } else if (square.type === 'I') {\n    img.src = `./graphics/pave${square.variation}.jpg`;\n    ctx.drawImage(img, y,x,50,50);\n    img.src = square.item.img;\n  } else if (square.type === 'M') {\n    img.src = `./graphics/pave${square.variation}.jpg`;\n    ctx.drawImage(img, y,x,50,50);\n    if (square.seeing) {\n      img.src = square.creature.stats.img;\n    }\n  } else if (square.type === '0' || square.new) {\n    img.src = `./graphics/pave${square.variation}.jpg`;\n  }\n  if (square.seen === true && square.seeing === false) {\n    ctx.drawImage(img, y,x,50,50);\n    ctx.fillStyle = \"rgba(0,0,0,0.4)\";\n    ctx.fillRect(y, x, 50, 50);\n  } else if (square.seeing) {\n    ctx.drawImage(img, y,x,50,50);\n  } else {\n    ctx.fillStyle = \"rgba(0,0,0,1)\";\n    ctx.fillRect(y, x, 50, 50)\n  }\n}\n\nGame.prototype.renderMiniMap = function(square, ctx, x, y){\n  let color = 'black';\n  if (square.type === '#' && square.direction === 's') {\n      color = 'blue'\n  } else if (square.type === '0') {\n    color = 'gray'\n  } else if (square.type === '@') {\n    color = 'red'\n  } else if (square.type === 'E') {\n    color = 'green'\n  } else if (square.type === 'X') {\n    color = 'purple'\n  } else if (square.type === 'I') {\n    color = 'gold'\n  }else if (square.type === 'M') {\n    if (square.seeing) {\n      color = 'orange'\n    }\n    else {\n      color = 'gray';\n    }\n  }\n  x += 70;\n  y += 591;\n  if (square.seen === true && square.seeing === false) {\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.rect(y, x, 3, 3);\n    ctx.fill();\n    ctx.fillStyle = \"rgba(0,0,0,0.4)\";\n    ctx.fillRect(y, x, 3, 3);\n  } else if (square.seeing) {\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.rect(y, x, 3, 3);\n    ctx.fill();\n  } else {\n    ctx.fillStyle = \"rgba(0,0,0,1)\";\n    ctx.fillRect(y, x, 3, 3)\n  }\n\n\n}\n\nGame.prototype.renderDmg = function (ctx) {\n    ctx.clearRect(100, 100, 600, 600);\n    if (Object.keys(this.dmgDisplay).length > 0) {\n      Object.keys(this.dmgDisplay).forEach(key => {\n        let dmg = this.dmgDisplay[key]\n        ctx.fillStyle = dmg[4] ? \"rgba(255, 255, 255, \" + dmg[1] + \")\" : \"rgba(255, 0, 0, \" + dmg[1] + \")\";\n        ctx.font = \"15pt 'Press Start 2P'\";\n        if (dmg[5]) {\n          ctx.font = \"italic 40pt Arial\";\n        }\n        ctx.fillText(dmg[0], dmg[2], dmg[3]);\n        dmg[1] = dmg[1] - 0.03;\n        dmg[4] ? dmg[2] -= 1 : dmg[2] += 1;\n        dmg[3] -= 1;\n        if (dmg[1] <= 0) {\n          delete this.dmgDisplay[key]\n        }\n    });\n  }\n  if (Object.keys(this.notification).length > 0) {\n    Object.keys(this.notification).forEach(key => {\n      let notice = this.notification[key]\n      ctx.fillStyle = notice[4] ? \"rgba(0, 255, 0, \" + notice[1] + \")\" : \"rgba(0, 0, 255, \" + notice[1] + \")\";\n      ctx.font = \"15pt 'Press Start 2P'\";\n      if (notice[4] === false) {\n        ctx.font = \"italic 40pt Arial\";\n      }\n      ctx.fillText(notice[0], notice[2], notice[3]);\n      notice[1] = notice[1] - 0.01;\n      notice[3] -= 1\n      if (notice[1] <= 0) {\n        delete this.notification[key]\n      }\n  });\n  }\n};\n\n\nGame.prototype.drawUI = function (ctxUI) {\n  ctxUI.clearRect(0, 0, 450, 600);\n  ctxUI.fillStyle = 'rgb(0, 0, 0)'\n  ctxUI.font = \"15pt 'Press Start 2P'\"\n  ctxUI.fillText('Cave: ' + this.currentLevel, 175, 75)\n\n  let hp = this.player.stats.health\n  ctxUI.fillStyle = 'rgb(0, 0, 0)'\n  ctxUI.font = \"15pt 'Press Start 2P'\"\n  ctxUI.fillText(`Level: ${this.player.level}`, 175, 100)\n\n  ctxUI.fillStyle = \"rgb(0,0,0)\";\n  ctxUI.fillRect(175, 135, 100, 5);\n  ctxUI.fillStyle = \"rgb(255,0,0)\";\n  ctxUI.fillRect(175, 135, (this.player.stats.health / this.player.stats.maxHp) * 100, 5);\n\n  ctxUI.fillStyle = 'rgb(255, 0, 0)'\n  ctxUI.font = \"10pt 'Press Start 2P'\"\n  ctxUI.fillText(`${this.player.stats.health} / ${this.player.stats.maxHp}`, 300, 140)\n  ctxUI.fillText('health', 180, 130)\n\n\n  let toLvl = this.player.toLvl\n  if (toLvl > 999){\n    let idx = toLvl.toString().indexOf('0');\n    toLvl = toLvl.toString().slice(0, idx) + 'k'\n  }\n  ctxUI.fillStyle = \"rgb(0,0,0)\";\n  ctxUI.fillRect(175, 160, 100, 5);\n  ctxUI.fillStyle = \"rgb(250,250,250)\";\n  ctxUI.fillRect(175, 160, (this.player.xp / this.player.toLvl) * 100, 5);\n  ctxUI.fillStyle = 'rgb(60, 60, 60)'\n  ctxUI.font = \"10pt 'Press Start 2P'\"\n  ctxUI.fillText(`${this.player.xp} / ${toLvl}`, 300, 165)\n  ctxUI.fillText(`exp`, 180, 158)\n\n  let potion = document.createElement(\"IMG\")\n  potion.src = './graphics/ruby.png'\n  ctxUI.drawImage(potion, 6, 265, 70, 70)\n\n  ctxUI.fillStyle = 'rgb(255, 255, 255)'\n  ctxUI.font = \"15pt 'Press Start 2P'\"\n  ctxUI.fillText(`${this.player.inventory[0].potions}`, 60, 295)\n\n  let info = document.createElement(\"IMG\")\n  info.src = './graphics/info.png'\n  ctxUI.drawImage(info, 14, 375, 50, 50)\n\n  let gh = document.createElement(\"IMG\")\n  gh.src = './graphics/gh.png'\n  ctxUI.drawImage(gh, 18, 475, 50, 50)\n\n  ctxUI.fillStyle = 'rgb(255, 255, 255)'\n  ctxUI.font = \"20pt 'Press Start 2P'\"\n  ctxUI.fillText(`How to play: `, 120, 295);\n\n  ctxUI.fillStyle = 'rgb(255, 255, 255)'\n  ctxUI.font = \"12pt 'Press Start 2P'\"\n  ctxUI.fillText(`Use arrow keys`, 120, 320)\n  ctxUI.fillText(`to move around`, 140, 340)\n  ctxUI.fillText(`Use 'spacebar'`, 120, 370)\n  ctxUI.fillText(`to heal`, 140, 390)\n  ctxUI.fillText(`Run into creatures`, 120, 420)\n  ctxUI.fillText(`for attacks`, 140, 440)\n  ctxUI.fillText(`Find the stairs to`, 120, 470)\n  ctxUI.fillText(`the next level`, 140, 490)\n\n\n\n};\n\nmodule.exports = Game;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game.js\n ** module id = 1\n ** module chunks = 0\n **/","'use strict'\nconst Creature = require('./creature');\nconst Item = require('./random_item')\n\nconst Map = function (mapWidth, mapHeight, lvl){\n  this.mapWidth = mapWidth;\n  this.mapHeight = mapHeight;\n  this.grid = [];\n  this.level = lvl;\n  this.playerLocation = null;\n  this.entrance = null;\n  this.exit = null;\n  this.monsters = 0;\n  this.monsterLocations = {};\n  this.treasureLocation = [];\n  this.steps = 0;\n  this.new = true\n  this.createMap(this.mapWidth, this.mapHeight);\n  this.generateMapSystem();\n  this.closeMap();\n  this.populate(this.entrance, this.grid);\n  this.newMonsters();\n  this.placeTreasure();\n  this.haveKey = false;\n  this.new = false;\n}\nconst chanceForWall = 0.4;\nconst chanceForMonster = 0.01\nconst dungeounEntrance = [];\n\nMap.prototype.createMap = function(x, y){\n  let map = [];\n  for (let i = 0; i < x; i++) {\n    let row = [];\n    for (let j = 0; j < y; j++) {\n      if(Math.random() < chanceForWall){\n        row.push({type: '#', seen: false, seeing: false});\n      } else {\n        row.push({type: '.', seen: false, seeing: false});\n      }\n    }\n    map.push(row);\n  };\n\n\n  this.grid = map;\n};\n\nMap.prototype.countWallNeigbbors = function(map, cellX, cellY){\n  let count = 0;\n  for (let i = -1; i < 2; i++) {\n    for (let j = -1; j < 2; j++) {\n      let x = cellX + i;\n      let y = cellY + j;\n      if (i===0 && j===0) {\n        continue;\n      }else if (x < 0 || y < 0 || x >= map.length || y >= map[0].length) {\n        count += 1;\n      } else if (map[x][y].type === 'T') {\n        count -= 3;\n      } else if (map[x][y].type === '#') {\n        count += 1;\n      }\n    }\n  }\n  return count;\n};\n\nMap.prototype.generateMapSystem = function(){\n  let times = 0\n  let map = this.grid;\n  while (times < 3){\n    let birthLimit = 4;\n    let deathLimit = 3;\n    let newMap = map;\n    for (let i = 0; i < this.mapHeight; i++) {\n      for (let j = 0; j < this.mapWidth; j++) {\n        let aliveNeighbors = this.countWallNeigbbors(map, i, j)\n        if (map[i][j].type === '#') {\n          if (aliveNeighbors < deathLimit) {\n            newMap[i][j].type = '.';\n          }else {\n            newMap[i][j].type = '#';\n          }\n        } else {\n          if (aliveNeighbors > birthLimit) {\n            newMap[i][j].type = '#';\n          } else {\n            newMap[i][j].type = '.';\n          }\n        }\n      }\n    }\n    map = newMap\n    times ++;\n  }\n  this.grid = map\n};\n\nMap.prototype.closeMap = function(){\n  let entrance = false;\n  let notDone = true;\n  let direction = 's';\n  let x = 0;\n  let y = 0;\n\n  while (notDone) {\n    if (entrance === false && this.grid[x][y].type === '.') {\n      this.grid[x][y] = {type: 'E', direction: direction, seen: false, seeing: false, variation: Math.floor(Math.random() * 3)};\n      this.entrance = [x,y]\n      entrance = true;\n    } else if (this.grid[x][y].type === '.') {\n      this.grid[x][y] = {type: '#', direction: direction, seen: false, seeing: false}\n    }\n\n    if (direction === 's') {\n      x += 1;\n      if (x === (this.mapWidth - 1)) {\n        direction = 'e'\n      }\n    } else if (direction === 'e') {\n      y += 1;\n      if (y === (this.mapHeight - 1)) {\n        direction = 'n'\n      }\n    } else if (direction === 'n') {\n      x -= 1;\n      if (x < 1) {\n        direction = 'w'\n      }\n    } else if (direction === 'w') {\n      y -= 1;\n      if (y < 1 ) {\n        break;\n      }\n    }\n\n  }\n}\n\nMap.prototype.populate = function(start, map, sum){\n  let x = start[0];\n  let y = start[1];\n  let count = sum || 0\n  let nextSpotRight = [];\n  let nextSpotLeft = [];\n  let nextSpotUpperRight = [];\n  let nextSpotUpperLeft = [];\n  let nextSpotBottomRight = [];\n  let nextSpotBottomLeft = [];\n  let lastSpotUpperRight = [];\n  let lastSpotUpperLeft = [];\n  if (map[x][y].type === 'E') {\n    let direction = map[x][y].direction;\n    if (x < 49 && map[x+1][y].type === '.') {\n      x += 1\n    } else if (y > 0 && map[x][y-1].type === '.') {\n      y -=1\n    } else if (x > 0 && map[x-1][y].type === '.') {\n      x -= 1\n    } else if (y < 49 && map[x][y+1].type === '.') {\n      y += 1\n    }\n    map[x][y] = {type: '@', direction: direction, seen: false, seeing: true, variation: Math.floor(Math.random() * 3)}\n    this.playerLocation = [x, y]\n  }\n\n  let x1 = x\n\n  while (x1 < map.length && y > 0  && y < 49 && (map[x1][y].type === '.' || map[x1][y].type === '@')) {\n    if (nextSpotRight.length === 0 && map[x1][y+1].type === '.' ) {\n      nextSpotRight.push(x1);\n      nextSpotRight.push(y+1);\n    }\n    if (nextSpotLeft.length === 0 && map[x1][y-1].type === '.' ) {\n      nextSpotLeft.push(x1);\n      nextSpotLeft.push(y-1);\n    }\n\n    if (map[x1][y+1].type === '.' ) {\n      nextSpotBottomRight = [];\n      nextSpotBottomRight.push(x1);\n      nextSpotBottomRight.push(y+1);\n    }\n    if (map[x1][y-1].type === '.' ) {\n      nextSpotBottomLeft = [];\n      nextSpotBottomLeft.push(x1);\n      nextSpotBottomLeft.push(y-1);\n    }\n    if (map[x1][y].type === '@' || map[x1][y].type === '#' || map[x1][y].type === '#') {\n\n    } else if (count === 800) {\n      map[x1][y] = {type: 'X', direction: 's', seen: false, seeing: false, variation: Math.floor(Math.random() * 3)}\n      this.exit = [x1, y]\n    } else {\n      map[x1][y] = {type: '0', variation: Math.floor(Math.random() * 3), seen: false, seeing: false};\n    }\n    x1 += 1\n    count += 1\n  }\n  map[x1][y].direction = 'n';\n\n  let x2 = x - 1\n  while (x2 > 0 && map[x2][y].type === '.') {\n    if (nextSpotUpperRight.length == 0 && map[x2][y+1].type === '.' ) {\n      nextSpotUpperRight.push(x2);\n      nextSpotUpperRight.push(y+1);\n    }\n    if (nextSpotUpperLeft.length == 0 && map[x2][y-1].type === '.' ) {\n      nextSpotUpperLeft.push(x2);\n      nextSpotUpperLeft.push(y-1);\n    }\n    if (map[x2][y+1].type === '.' ) {\n      lastSpotUpperRight = [];\n      lastSpotUpperRight.push(x2);\n      lastSpotUpperRight.push(y+1);\n    }\n    if (map[x2][y-1].type === '.' ) {\n      lastSpotUpperLeft = [];\n      lastSpotUpperLeft.push(x2);\n      lastSpotUpperLeft.push(y-1);\n    }\n    if (count === 800) {\n      map[x2][y] = {type: 'X', direction: 's', seen: false, seeing: false, variation: Math.floor(Math.random() * 3)}\n      this.exit = [x2, y]\n    } else {\n      map[x2][y] = {type: '0', variation: Math.floor(Math.random() * 3), seen: false, seeing: false};\n    }\n    x2 -= 1\n    count += 1\n  }\n  map[x2][y].direction = 's';\n\n  let accum = count\n  if (nextSpotRight.length > 0) {\n     accum = this.populate(nextSpotRight, map, accum)\n  }\n  if (nextSpotLeft.length > 0) {\n    accum = this.populate(nextSpotLeft, map, accum)\n  }\n  if (nextSpotUpperRight.length > 0) {\n    accum = this.populate(nextSpotUpperRight, map, accum)\n  }\n  if (nextSpotUpperLeft.length > 0) {\n    accum = this.populate(nextSpotUpperLeft, map, accum)\n  }\n  if (nextSpotBottomRight.length > 0) {\n    accum = this.populate(nextSpotBottomRight, map, accum)\n  }\n  if (nextSpotBottomLeft.length > 0) {\n    accum = this.populate(nextSpotBottomLeft, map, accum)\n  }\n  if (lastSpotUpperRight.length > 0) {\n    accum = this.populate(lastSpotUpperRight, map, accum)\n  }\n  if (lastSpotUpperLeft.length > 0) {\n    accum = this.populate(lastSpotUpperLeft, map, accum)\n  }\n\n  this.steps = accum\n  return accum\n}\n\nMap.prototype.newMonsters = function () {\n  if (this.monsters > 0) {\n    return;\n  }\n  this.monsters = 0;\n  this.monsterLocations = {};\n  for (let i = 0; i < this.grid.length; i++) {\n    for (let j = 0; j < this.grid.length; j++) {\n      if (this.grid[i][j].type === '0') {\n        if (Math.random() < chanceForMonster) {\n          this.grid[i][j] = {type: 'M', seen: this.new ? false : true, seeing: false, variation: Math.floor(Math.random() * 3), creature: new Creature((Math.floor(Math.random() * this.level) % 9), [i, j])}\n          this.monsterLocations[this.monsters] = this.grid[i][j];\n          this.monsters += 1;\n        }\n      }\n    }\n  }\n};\n\n\nMap.prototype.placeTreasure = function(){\n  let treasureHiddenLimit = 6;\n  let treasureCount = 0\n  for (let x=1; x < this.mapHeight; x++){\n    for (let y=1; y < this.mapWidth; y++){\n      if (this.grid[x][y].type === '.') {\n        this.grid[x][y] = {type: '#', seen: false, seeing: false}\n      }\n      if (this.grid[x][y].type === '0') {\n        let walls = this.countWallNeigbbors(this.grid, x, y);\n        if(walls >= treasureHiddenLimit){\n          this.treasureLocation.push([x,y])\n          let item = Item.ITEM_DROP[0];\n          this.grid[x][y].type = 'I';\n          this.grid[x][y].item = item;\n          this.grid[x][y].img = item.img;\n          treasureCount += 1;\n          if (treasureCount > 4) {\n            treasureHiddenLimit = 7;\n          }\n        }\n      }\n    }\n  }\n}\n\nMap.prototype.displayMap= function(){\n  let map = this.grid\n  for (let i = 0; i < map.length; i++) {\n    let row = ''\n    for (let j = 0; j < map[i].length; j++) {\n      row += map[i][j].type;\n    }\n    console.log(row);\n  }\n}\n\n\n\nmodule.exports = Map;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/map.js\n ** module id = 2\n ** module chunks = 0\n **/","const Character = require('./character_model');\nconst Item = require('./random_item');\n\nconst Creature = function (x, loc){\n  this.stats = Object.assign({}, Character.creature[x]);\n  this.strBonus = 0;\n  this.dexBonus = 0;\n  this.ac = this.stats.armor + this.dexBonus;\n  this.dmgDisplay = {};\n  this.location = loc;\n}\n\nCreature.prototype.takeTurn = function(grid){\n  for (let i = -2; i < 3; i++) {\n    let x = this.location[0]\n    let x1 = x + i;\n    for (let j = -2; j < 3; j++) {\n      let y = this.location[1]\n      let y1 = y + j;\n      if (x1 >= 0 && x1 <= 49 && y1 >= 0 && y1 <= 49) {\n        if (grid[x1][y1].type === '@') {\n          let num = Math.min(Math.abs(i), Math.abs(j))\n          if (i === num) {\n            moveX = 0;\n            if (j < 0) {\n  \t\t\t\t\t\tmoveY = -1;\n  \t\t\t\t\t} else if (j > 0) {\n  \t\t\t\t\t\tmoveY = 1;\n  \t\t\t\t\t} else {\n  \t\t\t\t\t\tmoveY = 0;\n  \t\t\t\t\t}\n          } else {\n            moveY = 0;\n            if (i < 0) {\n              moveX = -1;\n            } else if (i > 0) {\n              moveX = 1;\n            } else {\n              moveX = 0;\n            }\n          }\n\n          let posX = this.location[0] + moveX\n          let posY = this.location[1] + moveY\n          if (grid[posX][posY].type === '0') {\n            let holder = grid[posX][posY];\n            grid[posX][posY] = grid[this.location[0]][this.location[1]];\n            grid[this.location[0]][this.location[1]] = holder;\n            this.location = [posX, posY]\n\n          }\n        }\n      }\n    }\n  }\n}\n\nCreature.prototype.rollDmg = function () {\n  let dmg = Math.ceil(Math.random() * this.stats.dmg)\n  dmg += this.strBonus\n  return dmg;\n};\n\nCreature.prototype.displayDmg = function (ctx, dmg, crit = false) {\n  let alpha = 1;\n  let pX = 300;\n  let pY = 300;\n  let num = Math.random()\n  this.dmgDisplay[num] = [ctx, dmg, pX, pY, alpha, crit];\n    ctx.clearRect(100, 100, 600, 600);\n    if (Object.keys(this.dmgDisplay).length > 0) {\n      Object.keys(this.dmgDisplay).forEach(key => {\n        let dmg = this.dmgDisplay[key]\n        dmg[0].fillStyle = \"rgba(255, 0, 0, \" + dmg[4] + \")\";\n        dmg[0].font = \"italic 20pt Arial\";\n        if (dmg[5]) {\n          dmg[0].font = \"italic 40pt Arial\";\n        }\n        dmg[0].fillText(dmg[1], pX, pY);\n        dmg[4] = dmg[4] - 0.05;\n        dmg[2] += 3;\n        dmg[3] -= 3;\n        if (dmg[4] <= 0) {\n          this.dmgDisplay\n        }\n    });\n  }\n};\n\nCreature.prototype.render = function(ctx) {\n  let x = this.location[0]\n  let y = this.location[1]\n  let img = this.stats.img\n  ctx.drawImage(img, y * 10, x * 10,50,50);\n}\n\nmodule.exports = Creature;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/creature.js\n ** module id = 3\n ** module chunks = 0\n **/","const Weapon = require('./weapon');\n\nmodule.exports = {\n  human: {\n    type: 'player',\n    health: 30,\n    weapon: 'dagger',\n    dmg: Weapon.dagger.dmg,\n    armor: 12,\n    img: './graphics/human_m.png',\n    maxHp: 30\n  },\n\n  creature: {\n    0: {\n      type: 'goblin',\n      health: 8,\n      weapon: 'dagger',\n      dmg: Weapon.dagger.dmg,\n      armor: 8,\n      img: './graphics/goblin.png',\n      xp: 30\n    },\n    1: {\n      type: 'orc',\n      health: 16,\n      weapon: 'dagger',\n      dmg: Weapon.axe.dmg,\n      armor: 10,\n      img: './graphics/orc.png',\n      xp: 40\n    },\n\n    2: {\n      type: 'orc warrior',\n      health: 25,\n      weapon: 'short sword',\n      dmg: Weapon.ssword.dmg,\n      armor: 14,\n      img: './graphics/orc_warrior.png',\n      xp: 60\n    },\n\n    3: {\n      type: 'Kobold',\n      health: 40,\n      weapon: 'spiked mace',\n      dmg: Weapon.mace.dmg,\n      armor: 15,\n      img: './graphics/big_kobold.png',\n      xp: 70\n    },\n\n    4: {\n      type: 'Minotaur',\n      health: 60,\n      weapon: 'hooves',\n      dmg: Weapon.hooves.dmg,\n      armor: 18,\n      img: './graphics/minotaur.png',\n      xp: 100\n    },\n\n    5: {\n      type: 'Rock troll',\n      health: 100,\n      weapon: 'fists of rock',\n      dmg: Weapon.rockFists.dmg,\n      armor: 24,\n      img: './graphics/rock_troll.png',\n      xp: 200\n    },\n\n    6: {\n      type: 'boggart',\n      health: 125,\n      weapon: 'weapon of choice',\n      dmg: Weapon.woc.dmg,\n      armor: 25,\n      img: './graphics/boggart.png',\n      xp: 300\n    },\n\n    7: {\n      type: 'demon spawn',\n      health: 200,\n      weapon: 'magic longsword',\n      dmg: Weapon.mLongSword.dmg,\n      armor: 27,\n      img: './graphics/demonspawn.png',\n      xp: 400\n    },\n\n    8: {\n      type: 'dragon',\n      health: 500,\n      weapon: 'death and flames',\n      dmg: Weapon.dragon.dmg,\n      armor: 30,\n      img: './graphics/dragon.png',\n      xp: 600\n    }\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/character_model.js\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = {\n  fist: {\n    dmg: 1\n  },\n  dagger: {\n    dmg: 4\n  },\n  axe: {\n    dmg: 6\n  },\n  ssword: {\n    dmg: 8\n  },\n  lsword: {\n    dmg: 10\n  },\n  gsword: {\n    dmg: 12\n  },\n  mace: {\n    dmg: 12\n  },\n  hooves: {\n    dmg: 14\n  },\n  rockFists: {\n    dmg: 12\n  },\n  woc: {\n    dmg: 25\n  },\n  mLongSword: {\n    dmg: 50\n  },\n  dragon: {\n    dmg: 100\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/weapon.js\n ** module id = 5\n ** module chunks = 0\n **/","module.exports = {\n\n  ITEM_DROP: {\n      0: {kind: 'potion',\n      img: './graphics/ruby.png'\n      }\n    },\n\n  randomDrop: function(){\n    let chance = Math.floor(Math.random() * 5);\n    if (this.ITEM_DROP[chance]) {\n      return this.ITEM_DROP[chance];\n    } else {\n      return false;\n    }\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/random_item.js\n ** module id = 6\n ** module chunks = 0\n **/","const Character = require('./character_model');\n\nconst Player = function (game){\n  this.stats = Object.assign({}, Character.human);\n  this.strBonus = 0;\n  this.dexBonus = 0;\n  this.ac = this.stats.armor + this.dexBonus;\n  this.level = 1;\n  this.xp = 0;\n  this.toLvl = 200;\n  this.inventory = {0: {potions: 2}}\n  this.game = game;\n  this.kills = 0;\n}\n\nPlayer.prototype.rollDmg = function () {\n  let dmg = Math.ceil(Math.random() * this.stats.dmg)\n  dmg += this.strBonus\n  return dmg;\n};\n\nPlayer.prototype.gainXp = function (xp) {\n  this.xp += xp;\n  if (this.xp >= this.toLvl) {\n    this.levelUp();\n    return true\n  }\n  return false\n};\n\nPlayer.prototype.usePotion = function () {\n  if (this.inventory[0].potions > 0) {\n    this.inventory[0].potions -= 1;\n    let heal = Math.floor(this.stats.maxHp/3);\n    if (this.stats.health + heal > this.stats.maxHp) {\n      this.stats.health = this.stats.maxHp\n    } else {\n      this.stats.health += heal;\n    }\n    let num = Math.random();\n    this.game.notification[num] = [heal, 1, 275, 300, true]\n  }\n};\n\nPlayer.prototype.levelUp = function () {\n  this.level += 1;\n  this.stats.maxHp += 30;\n  this.stats.health += 30;\n  this.toLvl = this.level * 200;\n  this.xp = 0;\n  if (this.level % 2 === 0) {\n    this.strBonus += 1;\n    this.dexBonus += 1;\n  }\n};\n\nmodule.exports = Player;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/player.js\n ** module id = 7\n ** module chunks = 0\n **/","const UI = require('./ui');\nconst Game = require('./game')\n\nconst GameView = function (game, ctx, ctxUI, ctxDmg) {\n  this.ctx = ctx;\n  this.ctxUI = ctxUI;\n  this.game = game;\n  this.ctxDmg = ctxDmg\n};\n\nGameView.MOVES = {\n  \"up\": [-1,  0],\n  \"left\": [ 0, -1],\n  \"down\": [ 1,  0],\n  \"right\": [ 0,  1],\n};\n\nGameView.INTERACT ={\n  \"space\": ['heal'],\n  \"enter\": ['enter']\n};\n\nGameView.prototype.bindKeyHandlers = function () {\n  const player = this.player;\n  let that = this\n  Object.keys(GameView.MOVES).forEach((k) => {\n    let direction = GameView.MOVES[k];\n    key(k, function (e) {\n      e.preventDefault();\n      that.game.move(direction) });\n  });\n  Object.keys(GameView.INTERACT).forEach((k) => {\n    key(k, function (e) {\n      e.preventDefault();\n      if (k === 'space') {\n        that.game.player.usePotion();\n      } else if (k === 'enter') {\n        let btn = document.getElementById('selectButton');\n        btn.click();\n      }\n    })\n  });\n};\n\nGameView.prototype.intro = function () {\n  this.game.introOutro('intro');\n  let btn = document.getElementById('selectButton')\n  btn.addEventListener('click', (e)=>{\n    let introOutro = document.getElementById('intro-outro')\n    let textBox = document.getElementById('txt')\n    textBox.textContent = '';\n    e.preventDefault();\n    let game = new Game(this.ctxDmg);\n    while (game.map.steps < 800) {\n      game = new Game(this.ctxDmg);\n    }\n    this.game = game;\n    introOutro.style.visibility = 'hidden';\n  })\n  this.start();\n\n};\n\nGameView.prototype.start = function () {\n  this.bindKeyHandlers();\n  this.bindClicks();\n  this.lastTime = 0;\n  requestAnimationFrame(this.animate.bind(this));\n};\n\nGameView.prototype.bindClicks = function () {\n  let potion = document.getElementById('slot1')\n  potion.addEventListener('click', ()=> {\n    this.game.player.usePotion()\n  })\n\n  let modal = document.getElementById('slot2')\n  modal.addEventListener('click', ()=> {\n    let el = document.getElementById('overlay');\n    el.style.visibility = (el.style.visibility == 'visible' ? 'hidden' : 'visible')\n  })\n\n  let gh = document.getElementById('slot3')\n  gh.addEventListener('click', ()=> {\n    window.open(\"https://github.com/Jon-Melnick\");\n  })\n\n};\n\nGameView.prototype.animate = function(time){\n  const timeDelta = time - this.lastTime;\n  this.game.draw(this.ctx);\n  this.game.drawUI(this.ctxUI);\n  this.lastTime = time;\n  requestAnimationFrame(this.animate.bind(this));\n};\n\n\nmodule.exports = GameView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game_view.js\n ** module id = 8\n ** module chunks = 0\n **/","const UI = function (game){\n  this.game = game;\n}\n\nUI.prototype.draw = function (ctx) {\n  let color = 'blue';\n\n  ctx.fillStyle = color;\n  ctx.beginPath();\n  ctx.rect(0, 0, 100, 100);\n  ctx.fill();\n};\n\nmodule.exports = UI;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/ui.js\n ** module id = 9\n ** module chunks = 0\n **/"],"sourceRoot":""}